generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Vendor {
  id             String           @id @default(uuid()) @db.Char(40)
  name           String           @db.VarChar(100)
  email          String           @unique @db.VarChar(100)
  order          Order[]
  createdAt      DateTime         @default(now()) @map("created_at")
  updatedAt      DateTime         @updatedAt @map("updated_at")

  @@map("vendors")
}

model Product {
  id             String           @id @default(uuid()) @db.Char(40)
  name           String           @db.VarChar(100)
  description    String           @db.VarChar(1000)
  price          Decimal          @db.Decimal(10, 2)
  orderProduct   OrderProduct[]
  createdAt      DateTime         @default(now()) @map("created_at")
  updatedAt      DateTime         @updatedAt @map("updated_at")

  @@map("products")
}

model Order {
  id             String          @id @default(uuid()) @db.Char(40)
  status         String          @db.Char(40)
  vendor         Vendor          @relation(fields: [vendorId], references: [id])
  vendorId       String          @db.Char(40)
  orderProduct   OrderProduct[]
  createdAt      DateTime        @default(now()) @map("created_at")
  updatedAt      DateTime        @updatedAt @map("updated_at")

  @@map("orders")

}

model OrderProduct{
  id         String   @id @default(uuid()) @db.Char(40)
  order      Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId    String   @db.Char(40)
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId  String   @db.Char(40)
  quantity   Int      @db.Int
  total      Decimal @db.Decimal(10, 2)
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
}
